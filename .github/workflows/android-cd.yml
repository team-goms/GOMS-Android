name: Android CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Cache Gradle Packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{runner.os}}-gradle-${{hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt')}}
        restore-keys: |
          ${{runner.os}}-gradle-   

    - name: Create LOCAL_PROPERTIES
      run: echo '${{ secrets.LOCAL_PROPERTIES }}' > ./local.properties

    - name: Access GOOGLE_SERVICES
      run: echo '${{ secrets.GOOGLE_SERVICES }}' > ./presentation/google-services.json

    - name: Access SERVICE_ACCOUNT_JSON
      run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

    - name: Build Release AAB
      id: buildRelease
      run: ./gradlew bundleRelease

    - name: Sign AAB
      id: sign
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: presentation/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload AAB
      id: uploadArtifact
      uses: actions/upload-artifact@v1
      with:
        name: app
        path: presentation/build/outputs/bundle/release/app-release.aab

    - name: Deploy to Play Store
      id: deploy
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: service_account.json
        packageName: com.goms.presentation
        releaseFiles: app/build/outputs/bundle/release/app-release.aab
        track: beta

    - name: Build with Gradle
      run: ./gradlew build

    - name: GOMS Android CD success Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ success() }}
      with:
        title: üéâ GOMS Android CD success üéâ
        webhook: ${{ secrets.DISCORD_WEBHOOK_BOT }}
        color: 00FF00

    - name: GOMS Android CD failure Discord Notification
      uses: sarisia/actions-status-discord@v1
      if: ${{ failure() }}
      with:
        title: ‚ùå GOMS Android CD failed ‚ùå
        webhook: ${{ secrets.DISCORD_WEBHOOK_BOT }}
        color: FF0000
